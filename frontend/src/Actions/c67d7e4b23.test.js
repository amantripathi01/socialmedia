// Test generated by RoostGPT for test TestA using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const loginUser = require('./User');

jest.mock('axios');

describe('User', () => {
  describe('loginUser', () => {
    beforeEach(() => {
      axios.post.mockClear();
    });

    test('should dispatch LoginRequest action before making the request', async () => {
      const dispatch = jest.fn();
      const response = { data: { user: {} } };
      axios.post.mockResolvedValue(response);

      await loginUser('test@example.com', 'password')(dispatch);

      expect(dispatch).toHaveBeenCalledWith({ type: 'LoginRequest' });
    });

    test('should dispatch LoginSuccess action if the request is successful', async () => {
      const dispatch = jest.fn();
      const response = { data: { user: {} } };
      axios.post.mockResolvedValue(response);

      await loginUser('test@example.com', 'password')(dispatch);

      expect(dispatch).toHaveBeenCalledWith({
        type: 'LoginSuccess',
        payload: response.data.user,
      });
    });

    test('should dispatch LoginFailure action if the request fails', async () => {
      const dispatch = jest.fn();
      const error = { response: { data: { message: 'Request failed' } } };
      axios.post.mockRejectedValue(error);

      await loginUser('test@example.com', 'password')(dispatch);

      expect(dispatch).toHaveBeenCalledWith({
        type: 'LoginFailure',
        payload: error.response.data.message,
      });
    });
  });
});
