// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { loadUser } = require('./User.js');
jest.mock('axios');

describe('loadUser', () => {
  beforeEach(() => {
    axios.get.mockClear();
  });

  test('should dispatch LoadUserRequest action', async () => {
    const dispatch = jest.fn();
    await loadUser()(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'LoadUserRequest' });
  });

  test('should call axios.get with correct endpoint', async () => {
    const dispatch = jest.fn();
    await loadUser()(dispatch);
    expect(axios.get).toHaveBeenCalledWith('/api/v1/me');
  });

  test('should dispatch LoadUserSuccess action on successful API call', async () => {
    const dispatch = jest.fn();
    const user = { name: 'John Doe', email: 'john.doe@example.com' };
    axios.get.mockResolvedValueOnce({ data: { user } });
    await loadUser()(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'LoadUserSuccess', payload: user });
  });

  test('should dispatch LoadUserFailure action on failed API call', async () => {
    const dispatch = jest.fn();
    const message = 'An error occurred.';
    axios.get.mockRejectedValueOnce({ response: { data: { message } } });
    await loadUser()(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'LoadUserFailure', payload: message });
  });
});
