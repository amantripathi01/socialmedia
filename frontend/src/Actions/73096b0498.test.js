// Test generated by RoostGPT for test ExpressJs using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { loadUser } = require('./User');

jest.mock('axios');

describe('loadUser', () => {
  beforeEach(() => {
    axios.get.mockClear();
  });

  test('should dispatch LoadUserRequest and LoadUserSuccess on successful API call', async () => {
    const dispatch = jest.fn();
    const user = { id: 1, name: 'Test User' };
    axios.get.mockResolvedValue({ data: { user } });

    await loadUser()(dispatch);

    expect(dispatch).toHaveBeenNthCalledWith(1, { type: 'LoadUserRequest' });
    expect(axios.get).toHaveBeenCalledWith('/api/v1/me');
    expect(dispatch).toHaveBeenNthCalledWith(2, { type: 'LoadUserSuccess', payload: user });
  });

  test('should dispatch LoadUserRequest and LoadUserFailure on failed API call', async () => {
    const dispatch = jest.fn();
    const errorMessage = 'Error loading user';
    axios.get.mockRejectedValue({ response: { data: { message: errorMessage } } });

    await loadUser()(dispatch);

    expect(dispatch).toHaveBeenNthCalledWith(1, { type: 'LoadUserRequest' });
    expect(axios.get).toHaveBeenCalledWith('/api/v1/me');
    expect(dispatch).toHaveBeenNthCalledWith(2, { type: 'LoadUserFailure', payload: errorMessage });
  });
});
