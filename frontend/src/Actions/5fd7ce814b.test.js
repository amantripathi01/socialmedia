// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { getUserPosts } = require('./User');
const { useDispatch } = require('react-redux');

jest.mock('axios');
jest.mock('react-redux', () => ({
  useDispatch: jest.fn(),
}));

describe("getUserPosts", () => {
  let dispatch;

  beforeEach(() => {
    dispatch = jest.fn();
    useDispatch.mockReturnValue(dispatch);
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  test("should dispatch userPostsRequest action", async () => {
    axios.get.mockResolvedValueOnce({ data: {} });

    await getUserPosts(1)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({
      type: "userPostsRequest"
    });
  });

  test("should dispatch userPostsSuccess action when request is successful", async () => {
    const posts = [{ id: 1, title: "Post 1" }, { id: 2, title: "Post 2" }];
    axios.get.mockResolvedValueOnce({ data: { posts } });

    await getUserPosts(1)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({
      type: "userPostsSuccess",
      payload: posts
    });
  });

  test("should dispatch userPostsFailure action when request fails", async () => {
    const message = "Request failed";
    axios.get.mockRejectedValueOnce({ response: { data: { message } } });

    await getUserPosts(1)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({
      type: "userPostsFailure",
      payload: message
    });
  });
});
