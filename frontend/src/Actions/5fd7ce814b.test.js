// Test generated by RoostGPT for test ExpressJs using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { getUserPosts } = require("./User");
const { createStore, applyMiddleware } = require("redux");
const thunk = require("redux-thunk");
const rootReducer = require("../reducers");

jest.mock("axios");

let store;

beforeEach(() => {
  store = createStore(rootReducer, applyMiddleware(thunk));
});

describe("getUserPosts", () => {
  it("dispatches userPostsRequest and userPostsSuccess actions on successful API request", async () => {
    const id = "1";
    const posts = [{ id: "1", title: "Test post" }];
    axios.get.mockResolvedValue({ data: { posts } });

    await store.dispatch(getUserPosts(id));

    const actions = store.getActions();
    expect(actions[0]).toEqual({ type: "userPostsRequest" });
    expect(actions[1]).toEqual({ type: "userPostsSuccess", payload: posts });
  });

  it("dispatches userPostsRequest and userPostsFailure actions on failed API request", async () => {
    const id = "1";
    const errorMessage = "Request failed with status code 500";
    axios.get.mockRejectedValue({ response: { data: { message: errorMessage } } });

    await store.dispatch(getUserPosts(id));

    const actions = store.getActions();
    expect(actions[0]).toEqual({ type: "userPostsRequest" });
    expect(actions[1]).toEqual({ type: "userPostsFailure", payload: errorMessage });
  });
});
