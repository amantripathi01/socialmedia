// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { getUserPosts } = require('./User');

jest.mock('axios');

describe('getUserPosts', () => {
  const id = 1;
  const dispatch = jest.fn();
  const response = { data: { posts: ['post1', 'post2'] } };
  const error = { response: { data: { message: 'Error!' } } };

  beforeEach(() => {
    dispatch.mockClear();
  });

  it('dispatches userPostsRequest at the start', async () => {
    axios.get.mockResolvedValueOnce(response);
    await getUserPosts(id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'userPostsRequest' });
  });

  it('dispatches userPostsSuccess with data on success', async () => {
    axios.get.mockResolvedValueOnce(response);
    await getUserPosts(id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'userPostsSuccess', payload: response.data.posts });
  });

  it('dispatches userPostsFailure with error message on failure', async () => {
    axios.get.mockRejectedValueOnce(error);
    await getUserPosts(id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'userPostsFailure', payload: error.response.data.message });
  });
});
