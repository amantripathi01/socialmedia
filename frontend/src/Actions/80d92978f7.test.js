// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { getAllUsers } = require('./User');
jest.mock('axios');

describe('getAllUsers', () => {
  beforeEach(() => {
    axios.get.mockClear();
  });

  test('should dispatch allUsersRequest and allUsersSuccess when API call is successful', async () => {
    const dispatch = jest.fn();
    const users = [{ id: 1, name: 'John Doe' }, { id: 2, name: 'Jane Doe' }];
    axios.get.mockResolvedValue({ data: { users } });

    await getAllUsers('')(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: 'allUsersRequest' });
    expect(axios.get).toHaveBeenCalledWith('/api/v1/users?name=');
    expect(dispatch).toHaveBeenCalledWith({ type: 'allUsersSuccess', payload: users });
  });

  test('should dispatch allUsersRequest and allUsersFailure when API call fails', async () => {
    const dispatch = jest.fn();
    const message = 'Error fetching users';
    axios.get.mockRejectedValue({ response: { data: { message } } });

    await getAllUsers('')(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: 'allUsersRequest' });
    expect(axios.get).toHaveBeenCalledWith('/api/v1/users?name=');
    expect(dispatch).toHaveBeenCalledWith({ type: 'allUsersFailure', payload: message });
  });
});
