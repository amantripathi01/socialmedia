// Test generated by RoostGPT for test ExpressJs using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { updateProfile } = require('./User');
jest.mock('axios');

describe('User Profile Update', () => {
  let dispatch;

  beforeEach(() => {
    dispatch = jest.fn();
  });

  test('should dispatch updateProfileRequest action', async () => {
    const mockData = { data: { message: 'Profile updated successfully' } };
    axios.put.mockResolvedValue(mockData);
    await updateProfile('John Doe', 'john@example.com', 'avatar.jpg')(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateProfileRequest' });
  });

  test('should dispatch updateProfileSuccess action on successful update', async () => {
    const mockData = { data: { message: 'Profile updated successfully' } };
    axios.put.mockResolvedValue(mockData);
    await updateProfile('John Doe', 'john@example.com', 'avatar.jpg')(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateProfileSuccess', payload: mockData.data.message });
  });

  test('should dispatch updateProfileFailure action on update failure', async () => {
    const mockError = { response: { data: { message: 'Update failed' } } };
    axios.put.mockRejectedValue(mockError);
    await updateProfile('John Doe', 'john@example.com', 'avatar.jpg')(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateProfileFailure', payload: mockError.response.data.message });
  });
});
