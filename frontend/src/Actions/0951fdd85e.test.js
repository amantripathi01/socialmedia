// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { getUserProfile } = require('./User');

jest.mock('axios');

describe('User Profile', () => {
  beforeEach(() => {
    axios.get.mockClear();
  });

  test('should dispatch userProfileRequest and userProfileSuccess when request is successful', async () => {
    const dispatch = jest.fn();
    const data = {
      user: {
        id: 1,
        name: 'John Doe'
      }
    };

    axios.get.mockResolvedValue({ data });

    await getUserProfile(1)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({
      type: 'userProfileRequest'
    });

    expect(dispatch).toHaveBeenCalledWith({
      type: 'userProfileSuccess',
      payload: data.user
    });

    expect(axios.get).toHaveBeenCalledWith('/api/v1/user/1');
  });

  test('should dispatch userProfileRequest and userProfileFailure when request fails', async () => {
    const dispatch = jest.fn();
    const error = {
      response: {
        data: {
          message: 'User not found'
        }
      }
    };

    axios.get.mockRejectedValue(error);

    await getUserProfile(1)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({
      type: 'userProfileRequest'
    });

    expect(dispatch).toHaveBeenCalledWith({
      type: 'userProfileFailure',
      payload: error.response.data.message
    });

    expect(axios.get).toHaveBeenCalledWith('/api/v1/user/1');
  });
});
