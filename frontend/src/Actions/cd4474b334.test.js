// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { logoutUser } = require("./User");
const { createStore, applyMiddleware } = require("redux");
const thunk = require("redux-thunk");

jest.mock("axios");

describe("logoutUser", () => {
  let store;
  let dispatch;

  beforeEach(() => {
    dispatch = jest.fn();
    store = createStore(() => ({}), applyMiddleware(thunk));
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  test("should dispatch LogoutUserRequest action", async () => {
    axios.get.mockResolvedValue({});
    await store.dispatch(logoutUser());
    expect(dispatch).toHaveBeenCalledWith({ type: "LogoutUserRequest" });
  });

  test("should dispatch LogoutUserSuccess action when API call is successful", async () => {
    axios.get.mockResolvedValue({});
    await store.dispatch(logoutUser());
    expect(dispatch).toHaveBeenCalledWith({ type: "LogoutUserSuccess" });
  });

  test("should dispatch LogoutUserFailure action when API call fails", async () => {
    axios.get.mockRejectedValue({
      response: {
        data: {
          message: "Logout failed"
        }
      }
    });
    await store.dispatch(logoutUser());
    expect(dispatch).toHaveBeenCalledWith({
      type: "LogoutUserFailure",
      payload: "Logout failed"
    });
  });
});
