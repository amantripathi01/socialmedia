// Test generated by RoostGPT for test TestA using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { logoutUser } = require('./User');

jest.mock('axios');

describe('logoutUser', () => {
  beforeEach(() => {
    axios.get.mockClear();
  });

  test('should dispatch LogoutUserRequest action', async () => {
    const dispatch = jest.fn();
    await logoutUser()(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'LogoutUserRequest' });
  });

  test('should make a GET request to /api/v1/logout', async () => {
    const dispatch = jest.fn();
    await logoutUser()(dispatch);
    expect(axios.get).toHaveBeenCalledWith('/api/v1/logout');
  });

  test('should dispatch LogoutUserSuccess action if request is successful', async () => {
    const dispatch = jest.fn();
    axios.get.mockResolvedValue({});
    await logoutUser()(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'LogoutUserSuccess' });
  });

  test('should dispatch LogoutUserFailure action if request fails', async () => {
    const dispatch = jest.fn();
    const error = new Error('Network error: Something went wrong');
    error.response = {
      data: {
        message: 'Network error: Something went wrong'
      }
    };
    axios.get.mockRejectedValue(error);
    await logoutUser()(dispatch);
    expect(dispatch).toHaveBeenCalledWith({
      type: 'LogoutUserFailure',
      payload: 'Network error: Something went wrong'
    });
  });
});
