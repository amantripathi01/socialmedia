// Test generated by RoostGPT for test TestA using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { followAndUnfollowUser } = require('./User');
const { createStore } = require('redux');

jest.mock('axios');

describe('followAndUnfollowUser', () => {
  let store;
  let mockDispatch;

  beforeEach(() => {
    store = createStore(() => ({}));
    mockDispatch = jest.fn();
  });

  test('dispatches followUserRequest action when called', async () => {
    await followAndUnfollowUser('1')(mockDispatch);

    expect(mockDispatch).toHaveBeenCalledWith({ type: 'followUserRequest' });
  });

  test('dispatches followUserSuccess action when request is successful', async () => {
    const data = { message: 'Success' };
    axios.get.mockResolvedValue({ data });

    await followAndUnfollowUser('1')(mockDispatch);

    expect(mockDispatch).toHaveBeenCalledWith({
      type: 'followUserSuccess',
      payload: data.message
    });
  });

  test('dispatches followUserFailure action when request fails', async () => {
    const error = new Error('Request failed');
    error.response = { data: { message: 'Request failed' } };
    axios.get.mockImplementation(() => Promise.reject(error));

    await followAndUnfollowUser('1')(mockDispatch);

    expect(mockDispatch).toHaveBeenCalledWith({
      type: 'followUserFailure',
      payload: error.response.data.message
    });
  });
});
