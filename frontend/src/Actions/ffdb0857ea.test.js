// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { likePost } = require("./Post");

jest.mock('axios');

describe("likePost", () => {
  beforeEach(() => {
    axios.get.mockClear();
  });

  test("should dispatch likeRequest and likeSuccess on successful API call", async () => {
    const dispatch = jest.fn();
    const id = "123";
    const response = { data: { message: "Post liked successfully" } };

    axios.get.mockResolvedValue(response);

    await likePost(id)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: "likeRequest" });
    expect(axios.get).toHaveBeenCalledWith(`/api/v1/post/${id}`);
    expect(dispatch).toHaveBeenCalledWith({
      type: "likeSuccess",
      payload: response.data.message
    });
  });

  test("should dispatch likeRequest and likeFailure on unsuccessful API call", async () => {
    const dispatch = jest.fn();
    const id = "123";
    const error = { response: { data: { message: "Error liking post" } } };

    axios.get.mockRejectedValue(error);

    await likePost(id)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: "likeRequest" });
    expect(axios.get).toHaveBeenCalledWith(`/api/v1/post/${id}`);
    expect(dispatch).toHaveBeenCalledWith({
      type: "likeFailure",
      payload: error.response.data.message
    });
  });
});
