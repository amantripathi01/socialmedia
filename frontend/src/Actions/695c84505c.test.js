// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { getMyPosts } = require("./User");
const { createStore, applyMiddleware } = require("redux");
const thunk = require("redux-thunk");

jest.mock("axios");

describe("getMyPosts", () => {
  let store;

  beforeEach(() => {
    store = createStore(
      (state = {}, action) => state,
      applyMiddleware(thunk)
    );
  });

  it("dispatches myPostsRequest and myPostsSuccess when API request succeeds", async () => {
    const posts = [{ id: 1, title: "Post 1" }, { id: 2, title: "Post 2" }];
    axios.get.mockResolvedValue({ data: { posts } });

    await store.dispatch(getMyPosts());

    const actions = store.getActions();
    expect(actions[0]).toEqual({ type: "myPostsRequest" });
    expect(actions[1]).toEqual({ type: "myPostsSuccess", payload: posts });
  });

  it("dispatches myPostsRequest and myPostsFailure when API request fails", async () => {
    const errorMessage = "Error fetching posts";
    axios.get.mockRejectedValue({
      response: { data: { message: errorMessage } },
    });

    await store.dispatch(getMyPosts());

    const actions = store.getActions();
    expect(actions[0]).toEqual({ type: "myPostsRequest" });
    expect(actions[1]).toEqual({
      type: "myPostsFailure",
      payload: errorMessage,
    });
  });
});
