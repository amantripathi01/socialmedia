// Test generated by RoostGPT for test ExpressJs using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { getMyPosts } = require('./User');
const { store } = require('./store'); 

jest.mock('axios');

describe('getMyPosts', () => {

  beforeEach(() => {
    store.dispatch = jest.fn();
  });

  it('dispatches myPostsRequest action when it starts fetching posts', async () => {
    axios.get.mockResolvedValueOnce({ data: { posts: [] } });
    await getMyPosts()(store.dispatch);
    expect(store.dispatch).toHaveBeenCalledWith({ type: 'myPostsRequest' });
  });

  it('dispatches myPostsSuccess action with the posts when it successfully fetches posts', async () => {
    const posts = [{ id: 1, title: 'Post 1' }, { id: 2, title: 'Post 2' }];
    axios.get.mockResolvedValueOnce({ data: { posts } });
    await getMyPosts()(store.dispatch);
    expect(store.dispatch).toHaveBeenCalledWith({ type: 'myPostsSuccess', payload: posts });
  });

  it('dispatches myPostsFailure action with an error message when it fails to fetch posts', async () => {
    const errorMessage = 'Failed to fetch posts';
    axios.get.mockRejectedValueOnce({ response: { data: { message: errorMessage } } });
    await getMyPosts()(store.dispatch);
    expect(store.dispatch).toHaveBeenCalledWith({ type: 'myPostsFailure', payload: errorMessage });
  });
});
