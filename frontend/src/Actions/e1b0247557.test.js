// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { updatePost } = require('./Post');

jest.mock('axios');

describe('updatePost', () => {
  beforeEach(() => {
    axios.put.mockClear();
  });

  test('should dispatch updateCaptionRequest action', async () => {
    const dispatch = jest.fn();
    const caption = 'Test caption';
    const id = '1';
    const response = { data: { message: 'Caption updated successfully' } };

    axios.put.mockResolvedValue(response);
    
    await updatePost(caption, id)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionRequest' });
  });

  test('should dispatch updateCaptionSuccess action on successful update', async () => {
    const dispatch = jest.fn();
    const caption = 'Test caption';
    const id = '1';
    const response = { data: { message: 'Caption updated successfully' } };

    axios.put.mockResolvedValue(response);
    
    await updatePost(caption, id)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionSuccess', payload: response.data.message });
  });

  test('should dispatch updateCaptionFailure action on failure', async () => {
    const dispatch = jest.fn();
    const caption = 'Test caption';
    const id = '1';
    const error = { response: { data: { message: 'Update failed' } } };

    axios.put.mockRejectedValue(error);
    
    await updatePost(caption, id)(dispatch);

    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionFailure', payload: error.response.data.message });
  });
});
