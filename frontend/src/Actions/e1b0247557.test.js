// Test generated by RoostGPT for test TestA using AI Type Open AI and AI Model gpt-4

const axios = require('axios');
const { updatePost } = require('./Post');

jest.mock('axios');

describe('updatePost', () => {
  const id = 1;
  const caption = 'New Caption';
  const dispatch = jest.fn();

  beforeEach(() => {
    dispatch.mockClear();
  });

  it('dispatches updateCaptionRequest action when called', async () => {
    axios.put.mockResolvedValue({});
    await updatePost(caption, id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionRequest' });
  });

  it('dispatches updateCaptionSuccess action on successful update', async () => {
    const response = { data: { message: 'Post updated successfully' } };
    axios.put.mockResolvedValue(response);
    await updatePost(caption, id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionSuccess', payload: response.data.message });
  });

  it('dispatches updateCaptionFailure action on update failure', async () => {
    const error = { response: { data: { message: 'Update failed' } } };
    axios.put.mockRejectedValue(error);
    await updatePost(caption, id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionFailure', payload: error.response.data.message });
  });
});
