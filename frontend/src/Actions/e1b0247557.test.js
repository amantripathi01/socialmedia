// Test generated by RoostGPT for test SocialMediaTest using AI Type Open AI and AI Model gpt-4

const axios = require("axios");
const { updatePost } = require('./Post');

jest.mock('axios');

describe('updatePost', () => {
  let dispatch;
  let caption;
  let id;

  beforeEach(() => {
    dispatch = jest.fn();
    caption = 'Test Caption';
    id = '123';
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('dispatches updateCaptionRequest action when called', async () => {
    axios.put.mockResolvedValue({});
    await updatePost(caption, id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionRequest' });
  });

  it('dispatches updateCaptionSuccess action on successful api call', async () => {
    const message = 'Update successful';
    axios.put.mockResolvedValue({ data: { message } });
    await updatePost(caption, id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionSuccess', payload: message });
  });

  it('dispatches updateCaptionFailure action on failed api call', async () => {
    const message = 'Update failed';
    axios.put.mockRejectedValue({ response: { data: { message } } });
    await updatePost(caption, id)(dispatch);
    expect(dispatch).toHaveBeenCalledWith({ type: 'updateCaptionFailure', payload: message });
  });
});
